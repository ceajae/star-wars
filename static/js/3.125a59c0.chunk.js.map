{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utils/constants.ts","utils/api.ts","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","components/films.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","BASE_URL","request","fn","url","a","fetch","response","json","self","this","args","arguments","apply","err","undefined","getFilms","getPeople","getSpecies","getVehicles","getStarships","getPlanets","QueryObserver","_Subscribable","client","options","_this","call","trackedProps","previousSelectError","bindMethods","setOptions","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","refetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","Object","keys","forEach","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","unsubscribe","subscribe","isFetching","isError","throwOnError","getCurrentQuery","fetchOptimistic","_this4","fetchOptions","_this5","promise","catch","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","data","placeholderData","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","isLoading","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","x","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","onSuccess","onError","_this8","notifyManager","batch","onSettled","listener","Subscribable","retryOnMount","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","batchCalls","suspense","useErrorBoundary","obsRef","current","useEffect","_ref","useQuery","arg1","arg2","arg3","parseQueryArgs","Films","props","filmsList","message","className","onClick","history","goBack","results","map","film","title","director","producer"],"mappings":"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","file":"static/js/3.125a59c0.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const BASE_URL = 'https://swapi.dev/api/';","import { BASE_URL } from './constants';\r\n\r\nconst request = async (url: string) => {\r\n    const response = await fetch(url);\r\n    return response.json()\r\n}\r\n\r\nexport const getFilms = () => {\r\n    return request(BASE_URL + 'films/');\r\n}\r\n\r\nexport const getPeople = () => {\r\n    return request(BASE_URL + 'people/');\r\n}\r\n\r\nexport const getSpecies = () => {\r\n    return request(BASE_URL + 'species/');\r\n}\r\n\r\nexport const getVehicles = () => {\r\n    return request(BASE_URL + 'vehicles/');\r\n}\r\n\r\nexport const getStarships = () => {\r\n    return request(BASE_URL + 'starships/');\r\n}\r\n\r\nexport const getPlanets = () => {\r\n    return request(BASE_URL + 'planets/');\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new Observer(queryClient, defaultedOptions);\n  }\n\n  var result = obsRef.current.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    obsRef.current.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    obsRef.current.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw obsRef.current.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = obsRef.current.trackResult(result);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import { useQuery } from \"react-query\";\r\nimport { getFilms } from \"../utils/api\";\r\n\r\nimport Loader from \"../common/loader\";\r\n\r\ntype Film = {\r\n    title: string,\r\n    director: string,\r\n    producer: string,\r\n}\r\n\r\ntype ResponseData = {\r\n    results: Film[],\r\n}\r\n\r\nconst Films = (props: any) => {\r\n    const { status, error, data } = useQuery<ResponseData, Error>('films', getFilms);\r\n\r\n    const goBack = () => {\r\n        props.history.goBack();\r\n    }\r\n\r\n    const renderTableData = (filmsList: Film[] | undefined) => {\r\n        return filmsList && filmsList.map((film, key) => {\r\n            return (\r\n                <tr key={key}>\r\n                    <td>{key + 1}</td>\r\n                    <td>{film.title}</td>\r\n                    <td>{film.director}</td>\r\n                    <td>{film.producer}</td>\r\n                </tr>\r\n             )\r\n        })\r\n    }\r\n\r\n    if (status === \"loading\") {\r\n        return <Loader />\r\n    }\r\n\r\n    if (status === \"error\") {\r\n        return <div>{error!.message}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <section>\r\n                <header className=\"header\">\r\n                    <span onClick={goBack}>\r\n                        <i className='fas fa-long-arrow-alt-left'></i>\r\n                    </span>\r\n                    <h1>Films</h1>\r\n                </header>\r\n\r\n                <div className=\"table_container\">\r\n                    <table className=\"table_wrap\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>S/N</th>\r\n                                <th>Title</th>\r\n                                <th>Director</th>\r\n                                <th>Producer</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderTableData(data && data.results)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Films;"],"sourceRoot":""}